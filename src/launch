#!/bin/sh
#
# General purpose launching script

fork() { setsid -f "$@" > /dev/null 2>&1 & }
launch_dwm() { while :; do dwm 2> ~/.local/share/dwm.log; done; }

mux() {
   tmux send "printf '\033[2J\033[H' && cd ${1%/*} && $EDITOR $1 && faint" Enter
   # tmux split-window -h "$EDITOR $1" \; \
   #    swap-pane -d -t :.1 \; \
   #    select-layout main-vertical
   # # resize-pane -Z
}

choose() {
   choice=$(printf "🌏 Browser\n📚 Foxit Reader\n📙 Master PDF Editor\n🎥 MPV" | $DMENU) &&
      case "${choice#* }" in
         Browser) fork falkon "$1" ;;
         FoxitReader) fork foxitreader "$1" ;;
         MasterPDFEditor) fork masterpdfeditor4 "$1" ;;
         MPV) qmedia "$1" ;;
      esac
}

link() {
   case "$1" in
      *mkv | *webm | *mp4 | *mp3 | *youtube.com/watch* | *youtube.com/playlist* | *youtu.be*)
         qmedia "$1"
         ;;
      *)
         fork "$BROWSER" "$1"
         # fork firefox "$1"
         ;;
   esac
}

launch_file() {
   ns "$1"
   case $1 in
      *.ar.*)
         alacritty \
            --config-file ~/.config/alacritty/alacritty_ar.yml \
            -e "$EDITOR" "$@" &
         exit
         ;;
      *.url)
         fork $BROWSER "$(cat "$@")"
         exit
         ;;
      *.sent)
         # devour sent "$@" &
         fork sent "$1"
         # sleep 1 && xdotool key Super+f
         exit
         ;;
      *.gpg)
         gpg -d "$1" > "${1%.gpg}"
         $EDITOR "${1%.gpg}"
         exit
         ;;
      *toy.*)
         {
            sleep 0.5
            tmux split-window -h -l 50 \; \
               select-layout main-vertical \; \
               last-pane
         } &
         ;;
   esac

   case $(file --mime-type "$1" -bL) in
      # text* | *x-empty | *json | *octet-stream) $EDITOR "$1" ;;
      text* | *x-empty | *json | *octet-stream) mux "$1" ;;
      *directory) $FILE "$1" ;;
      *html) fork falkon "$1" ;;
      video* | audio* | *gif) fork mpv "$1" ;;
      *pdf | *postscript | *epub+zip | *vnd.djvu) fork "$READER" "$1" ;;
      *svg+xml) fork magick display "$1" ;;
      *x-bittorrent) transmission-remote -a "$1" ;;
      *.document) pandoc "$1" -o "${1%.*}.pdf" && $0 -f "${1%.*}.pdf" ;;
      application*) extract --clean "$1" ;;
      image*)
         fork feh --keep-zoom-vp -A "setdisplay --bg %F" -B 'black' -d --edit --start-at \
            "$1"
         ;;
      *) return ;;
   esac

}

terminal() {
   if pidof tmux > /dev/null 2>&1; then
      tmux new-window
   else
      tmux new-session -d \; switch-client
   fi
   pidof "$TERMINAL" || "$TERMINAL" -e tmux attach &
}

launch_tmux() {
   pidof tmux > /dev/null 2>&1 || {
      tmux new-session -d \
         -n 'chat' 'weechat' \; \
         new-window -n 'schedule' 'calcurse' \; \
         split-window -h 'neomutt' \; last-pane
   }
}

case $1 in
   --tmux | -t) launch_tmux ;;
   --terminal | -T) terminal ;;
   --file | -f) launch_file "$2" ;;
   --choose | -c) choose "$2" ;;
   --link | -l) link "$2" ;;
   --dwm | -D) launch_dwm ;;
esac

#===============================================================================
#                             Exp
#===============================================================================

# launch_api() {
#    SERVER=/mnt/horcrux/innovations/quick_assist/server
#    tmux \
#       new-window -n 'server' \; \
#       send "cd $SERVER" 'Enter' \; \
#       send "yrd" 'Enter' \; \
#       split-window -h \; \
#       send 'da mongod' 'Enter' \; last-pane
# }

# dir() {
#    launch --tmux 2> /dev/null # Personal Script
#    if pidof tmux; then
#       tmux new-window
#    else
#       tmux new-session -d \; switch-client
#    fi
#    if pidof "$TERMINAL"; then
#       [ "$(pidof "$TERMINAL")" != "$(xdo pid)" ] &&
#          xdo activate -N Alacritty
#    else
#       "$TERMINAL" -e tmux attach &
#    fi
#    tmux send "$FILE ${1:-~}" "Enter"
# }

# terminal() {
# if pidof "$TERMINAL"; then
# [ "$(pidof "$TERMINAL")" != "$(xdo pid)" ] &&
# xdo activate -N st-256color
# xdo activate -N Alacritty
# else
# "$TERMINAL" -e tmux attach &
# "$TERMINAL"
# sleep 0.5
# xdo key_press -k 28
# xdo key_release -k 28
# xdo key_press -k 38
# sleep 0.2
# xdo key_release -k 38
# xdo key_press -k 36
# sleep 0.2
# xdo key_release -k 36
# fi
# }
