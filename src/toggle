#!/bin/sh
#
# Toggles misc operations

DDM=/tmp/ddm

key_layout() {
  :
}

tmux_center() {
  on() {
    tmux split-window -h -l 19\% "clear && read -r line" \; \
      last-pane \; \
      split-window -b -h -l 21\% "clear && read -r line" \; \
      last-pane
  }
  off() {
    tmux kill-pane -t :.+ \; kill-pane -t:.-
  }
  if [ -n "$1" ]; then
    case $1 in
      off) off ;;
      on) on ;;
    esac
    :
  elif [ "$(tmux list-panes | wc -l)" = 1 ]; then
    on
  else
    off
  fi
}

wallreel() {
  REELPID=/tmp/reel_pid

  if [ -s $REELPID ]; then
    kill $(cat $REELPID)
    : > $REELPID
    notify-send -u low -i "$ICONS"/wall.png "Wallpaper Reeling Stopped"
  else
    while :; do
      setdisplay --bg shuffle
      sleep 5m
    done &
    echo $! > $REELPID
    notify-send -u low -i "$ICONS"/wall.png "Wallpaper Reeling Started"
  fi

}

notifications() {
  if [ -s "$DDM" ]; then
    : > "$DDM"
    killall -SIGUSR2 dunst
    sleep 1
    # notify-send -u low -i "$ICONS"/bell.png 'Disturb all you want'
  else
    echo on > "$DDM"
    # notify-send -u low -i "$ICONS"/dnd.png 'Do not disturb'
    sleep 2
    killall -SIGUSR1 dunst
  fi
  # uniblocks -u noti
}

wifi() {
  if pidof iwd > /dev/null; then
    doas systemctl stop iwd
    notify-send -u low -i "$ICONS"/disconnected.png 'Turned Wifi Off'
  else
    doas systemctl start iwd
    notify-send -u low -i "$ICONS"/connected.png 'Turned Wifi On'
  fi
}

focusmode() {
  # if [ -s "$DDM" ]; then
  #    xdo show -a "$STATUSBAR"
  #    bspc config top_padding 35
  # else
  #    xdo hide -a "$STATUSBAR"
  #    bspc config top_padding 0
  # fi
  xdotool key Super+Shift+b
  sleep 0.5 && xdotool key Super+Shift+f
  # tmux set status
  wallreel
  # wifi
  notifications
}

fullscreen() {
  xdotool key Super+Shift+b
  sleep 0.7 && xdotool key Super+Shift+f
}

dont_disturb() {
  wallreel
  notifications
}

screen_key() {
  if pgrep screenkey; then
    pkill screenkey
  else
    screenkey -s small --persist
  fi
}

screen_text() {
  if pgrep screenkey; then
    pkill screenkey
  else
    screenkey -p center -s small --no-whitespace --multiline \
      --ignore Mode_switch --ignore Escape --ignore KP_Left
  fi
}

cam() {
  if pgrep droidcam; then
    pkill droidcam
  else
    droidcam-cli -a 192.168.0.101 4747
  fi
}

dark_mode() {
  VIM=$GIT/own/magpie/.config/nvim/init.vim
  ST=$GIT/suckless/st/config.def.h
  DWM=$GIT/suckless/dwm/config.def.h
  QUTE=$GIT/own/magpie/.config/qutebrowser/config.py

  if grep "bg=light" "$VIM" > /dev/null; then
    notify-send "Going dark"

    COLOR_SCHEME_VIM='s/=light/=dark/;s/PaperColor/one/'

    COLOR_SCHEME_ST='s/"#eee.*/\/\/&/'
    BACKGROUND_ST='s/defaultbg.*/defaultbg=258;/'
    FOREGROUND_ST='s/defaultfg.*/defaultfg=7;/'
    CURSOR_ST='s/defaultcs.*/defaultcs=7;/'
    FONT_ST='s/"mono:style=bold/"mono/'

    BACKGROUND_DWM='s/norm_bg\[.*/norm_bg\[\]="#000000";/'
    BORDER_DWM='s/norm_border\[.*/norm_border\[\]="#ffffff";/'
    FOREGROUND_DWM='s/norm_fg\[.*/norm_fg\[\]="#ffffff";/'

    THEME_QUTE='s/darkmode.*/darkmode.enabled=True/;s/dark=False/dark=True/'
  else
    notify-send "Going light"

    COLOR_SCHEME_VIM='s/=dark/=light/;s/scheme one/scheme PaperColor/'

    COLOR_SCHEME_ST='s/\/\/"#eee/"#eee/'
    BACKGROUND_ST='s/defaultbg.*/defaultbg=259;/'
    FOREGROUND_ST='s/defaultfg.*/defaultfg=258;/'
    CURSOR_ST='s/defaultcs.*/defaultcs=258;/'
    FONT_ST='s/"mono/&:style=bold/'

    BACKGROUND_DWM='s/norm_bg\[.*/norm_bg\[\]="#cccccc";/'
    BORDER_DWM='s/norm_border\[.*/norm_border\[\]="#000000";/'
    FOREGROUND_DWM='s/norm_fg\[.*/norm_fg\[\]="#000000";/'

    THEME_QUTE='s/darkmode.*/darkmode.enabled=False/;s/dark=True/dark=False/'
  fi

  sed -i "$COLOR_SCHEME_VIM" "$VIM"

  sed -i "$COLOR_SCHEME_ST;$BACKGROUND_ST;$FOREGROUND_ST;$CURSOR_ST;$FONT_ST" "$ST"
  cd "${ST%/*}" && make && doas -n make install
  pkill "$TERMINAL" 2> /dev/null
  $TERMINAL -e tmux attach &

  sed -i "$BACKGROUND_DWM;$BORDER_DWM;$FOREGROUND_DWM" "$DWM"
  cd "${DWM%/*}" && make && doas -n make install
  pkill dwm 2> /dev/null

  # sed -i "$THEME_QUTE" "$QUTE"
  # pkill qutebrowser && { qutebrowser & }
}

monocle() {
  tmux resize-pane -Z
  xdotool key Super+z
  # if tmux list-panes -F '#F' | grep -q Z; then
  #    tmux resize-pane -t :.- -x 17% \; \
  #       resize-pane -x 82
  # else
  #    tmux resize-pane -Z
  # fi
}

while :; do
  case $1 in
    --cam | -c) cam ;;
    --dark | -d) dark_mode ;;
    --dnd | -D) dont_disturb ;;
    --fullscreen | -f) fullscreen ;;
    --focus-mode | -F) focusmode ;;
    --key-layout | -k) key_layout ;;
    --monocle | -m) monocle ;;
    --noti | -n) notifications ;;
    --wall-reel | -r) wallreel ;;
    --tmux-center | -t) shift && tmux_center "$1" ;;
    --wifi | -w) wifi ;;
    --screen_key) screen_key ;;
    --screen_text) screen_text ;;
    *) break ;;
  esac
  shift
done
